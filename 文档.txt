计算机进制

一、 二进制转十进制
    首先对二进制进行补位， 然后看其首位， 若首位是 "0" 表示为正数， 反之首位是 "1" 表示为负数;

    1 ) 正整数转换

       算法: n位的二进制, 从右往左开始计算，第一位 * 2^0 + 第二位 * 2^1 + 第三位 * 2^2 + ... + 第n位 * 2^(n-1) ;

        示例: 将一个八位的二进制 1011000 转换为十进制

	补位  0101 1000
	-------------------------------------------------------------------
	            0       1      0      1     1     0     0     0
	-------------------------------------------------------------------
	换算	   2^7     2^6    2^5    2^4   2^3   2^2   2^1   2^0
	-------------------------------------------------------------------
	计算	  0*128 + 1*64 + 0*32 + 1*16 + 1*8 + 0*4 + 0*2 + 0*1
	-------------------------------------------------------------------
	结果	  0 + 64 + 0 + 16 + 8 = 88
    2）负整数转换

        算法: 先补位，再对二进制进行取反加一, 然后再做正整数换算;

        示例: 将八位的二进制 10111110 转换为十进制

	  补位  1011 1110
	--------------------------------------------------------------------
	            1       0      1      1     1     1     1     0
	--------------------------------------------------------------------
	取反        0       1      0      0     0     0     0     1
	--------------------------------------------------------------------
	加一        0       1      0      0     0     0     1     0
	--------------------------------------------------------------------
	换算	   2^7     2^6    2^5    2^4   2^3   2^2   2^1   2^0
	--------------------------------------------------------------------
	计算	  0*128 + 1*64 + 0*32 + 0*16 + 0*8 + 0*4 + 1*2 + 0*1
	--------------------------------------------------------------------
	结果	  0 + 64 + 0 + 0 + 0 + 0 + 2 + 0 = 66
	--------------------------------------------------------------------
	首位为1 结果取反  =====> -66

 
二、 十进制转二进制
    首先看数值正负, 若正数决定首位为 "0" , 反之负数决定首位为 "1";

    1 ) 正整数转换

    算法: 对数值除2取余, 将商递归除2操作, 再将余数顺序取反, 得到二进制值;

    示例: 将十进制 66 转换为八位二进制

	除        66/2     33/2     16/2     8/2     4/2     2/2     1/2     0
	--------------------------------------------------------------------------
	取余            0        1        0       0       0       0       1
 	--------------------------------------------------------------------------
	顺序取反    1 0 0 0 0 1 0
	--------------------------------------------------------------------------
	结果    0100 0010

    2)负整数转换

    算法: 先做正整数换算, 然后对结果进行取反加一;

    示例: 将十进制 -88 转换为八位二进制

	除        88/2     44/2     22/2     11/2     5/2     2/2     1/2     0
	--------------------------------------------------------------------------
	取余            0        0        0       1       1       0       1
 	--------------------------------------------------------------------------
	顺序取反    1 0 1 1 0 0 0
	--------------------------------------------------------------------------
	补位      0 1 0 1 1 0 0 0
	--------------------------------------------------------------------------
	取反      1 0 1 0 0 1 1 1
	--------------------------------------------------------------------------
	加一      1 0 1 0 1 0 0 0
	--------------------------------------------------------------------------
	结果	1010 1000
	
	

	
位移

 <<
 >>
 >>>
 |
 &
 ^
	
	
	
	
	
	
	
	
	

计算机网络


IP
	+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
	|	IPv4(Internet Protocol Version 4) 网络协议第4版																											|
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|           |           地址区间          |                          区分                         |                保留地址                 |    使用群体   |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|  A类地址  |  1.0.0.1-126.155.255.254    |  1[00000001] - 126[0111111] 第一个字节固定0开头       |  10.X.X.X、127.X.X.X                    |  政府(公用)   |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|  B类地址  |  128.0.0.1-191.255.255.254  |  128[10000000] - 191[10111111] 第一个字节固定10开头   |  172.16.X.X - 172.31.X.X、169.254.X.X   |  企业(商用)   |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|  C类地址  |  192.0.0.1-223.255.255.254  |  192[11000000] - 223[11011111] 第一个字节固定110开头  |  192.168.X.X                            |  个人(民用)   |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|  D类地址  |  224.0.0.1-239.255.255.254  |  224[11100000] - 239[11101111] 第一个字节固定1110开头 |                                         |  组播(中转站) |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	|  E类地址  |  240.0.0.1-255.255.255.254  |  240[11110000] - 255[11111111] 第一个字节固定1111开头 |                                         |  实验         |
	+ - - - - - + - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - + - - - - - - - +
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
Java中间件


	Tomcat
	架构 : 	一个Tomcat 中包含 一个Server; 
			一个Server 中包含 一组Service;
			一个Service 中包含 一个Engine 和一组Connector;
			一个Engine 中包含一组Host;
			一个Host 中包含一组Context;
			一个Context 中包含一组Wrapper;
			一个Wrapper 对应一个Servlet;
			一个Context 对应一个war 工程;
			
			
			
	
	
	
	Hystrix
		微服务中的服务保护框架, 在分布式中的容错框架.
		服务雪崩效应: 当一个服务受到高并发的请求,  服务器承受不了的情况下 `产生服务堆积, 导致其它服务不可用.
		
		作用: 服务保护(保护服务请求堆积, 避免服务瘫痪), 
		解决方案: 
			隔离[目的: 不同服务,互不影响; 方案: 线程池(每个服务独立线程池,CPU内存开销大)、信号量(限制服务同时访问量)]、
			降级[目的: 服务不可用,减少等待, 返回友好提示, 提高用户体验; ]、限流、
			熔断[目的: 服务达到最大承受能力, 拒绝访问服务, 调用服务降级的方法; 与降级一起使用];
			
			
			
			
	Consul + upsync + Nginx  动态负载均衡
		
		
		

